# -*- coding: utf-8 -*-
"""Hotel_Booking_Capstone_Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MTJqfTu3y_Tg2QmI14Kbc_qXZ98yY0ho

# **Project Name**    -

##### **Project Type**    - Exploratory Data Analysis
##### **Contribution**    - Individual
##### **Team Member 1 -** Sumit P. Pathade

# **Project Summary -**

For this hotel booking analysis, the goal was to explore the customer data of a hotel and identify any potential trends or correlations. The purpose of this exploratory data analysis (EDA) was to explore the hotel booking data set and identify potential relationships between key variables.

The data set included customer booking information. As part of the analysis, descriptive statistics were calculated for each variable, and visualizations were created to explore the relationships between various variables. To get insight from the dataset, we built a variety of charts, including a count plot, bar plot, kdeplot, heatmap, pairplot, violin plot, and boxplot.

The data set was composed of over 119390 hotel bookings, each containing several variables such as 'hotel', 'is_canceled', 'lead_time', For this hotel booking analysis, the goal was to explore the customer data of a hotel and identify any potential trends or correlations. The purpose of this exploratory data analysis (EDA) was to explore the hotel booking data set and identify potential relationships between key variables.

The data set included customer booking information. As part of the analysis, descriptive statistics were calculated for each variable, and visualizations were created to explore the relationships between various variables. To get insight from the'arrival_date_year', 'arrival_date_month', 'arrival_date_week_number', 'arrival_date_day_of_month', 'stays_in_weekend_nights', 'stays_in_week_nights', 'adults', 'children', 'babies', 'meal', 'country', 'market_segment', 'distribution_channel', 'is_repeated_guest', 'previous_cancellations', 'previous_bookings_not_canceled', 'reserved_room_type', 'assigned_room_type', 'booking_changes', 'deposit_type', 'agent', 'company', 'days_in_waiting_list', 'customer_type', 'adr', 'required_car_parking_spaces', 'total_of_special_requests', 'reservation_status', and 'reservation_status_date'.

Dataset variables are in int64, float64, and object datatypes. There are 32 variables: 12 variables are objects, 16 are int64, and 4 are float64. 31994 duplicate values were removed. The variables country had 452, children had 4, agent had 12193, and company had 82137 null values. We replaced the null value with the mode of each variable (country, children, agent) for these variables, but the variable "company" had more than 50% null value, so we removed it. Further, we removed outliers from lead_time and adr. The final dataset had 87396 observations.

We also changed the data types of variables children, agent, and reservation_status_date to int64, int64, and datetime64, respectively. We performed some feature engineering for more convenience and created new variables: total_stays, total_people, total_childrens, reserved_room_assigned, guest_category, and lead_time_category. Now total_people and total_childrens are in the floated 64 datatype, so we converted them to int64. Now We were removed from the observation because having total_people at 0 made no sense.

After data cleaning, exploratory data analysis revealed several interesting findings as following :

- The top country with the most number of bookings is PRT, and the number one agent with the most number of bookings is 9.
- Customers favored city hotels more than resort hotels by a margin of 61.07 percent.
- One of the four reservations is canceled.
- The most popular food is BB.
- The Online (internet) platform is used to make the majority of bookings.
- The majority of the bookings are made using TA/TO, the leading distribution channel.
- The vast majority of hotel bookings are made by new guests. Almost no consumers (3.86%) returned.
- The customer wants Room A to be reserved the most.
- Customers do not wish to make a bookings with a pre-deposit.
- Customers (80%) favored making a hotel reservation for a short visit.
- Only 10% of people require space to park their cars.
- Most visitors are couples.
- The inability to assign a reserved room to a customer is not grounds for cancellation.
- Booking cancellations are not caused by a longer Lead time.
- A city hotel is busier than a resort.
- The busiest months for hotels are October and September. There isn't a lengthy wait for reservations in July.
- Not assigning a reserved room does not affect ADR.

We had some difficulties with the data when we were cleaning and analyzing it. There were a lot of duplicate values in the dataset. Null values were present in the dataset. Choosing the most effective visualization method is difficult. Performing feature engineering was more challenging.

# **GitHub Link -**

https://github.com/sumit021094/Hotel_Booking_Capstone_project/tree/main

# **Problem Statement**

Have you ever wondered when the best time of year to book a hotel room is? Or the optimal length of stay in order to get the best daily rate? What if you wanted to predict whether or not a hotel was likely to receive a disproportionately high number of special requests? This hotel booking dataset can help you explore those questions!

This data set contains booking information for a city hotel and a resort hotel, and includes information such as when the booking was made, length of stay, the number of adults, children, and/or babies, and the number of available parking spaces, among other things. All personally identifying information has been removed from the data.

Explore and analyze the data to discover important factors that govern the bookings.

# **General Guidelines** : -

1.   Well-structured, formatted, and commented code is required.
2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.
     
     The additional credits will have advantages over other students during Star Student selection.
       
             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go
                       without a single error logged. ]

3.   Each and every logic should have proper comments.
4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.
        

```
# Chart visualization code
```
            

*   Why did you pick the specific chart?
*   What is/are the insight(s) found from the chart?
* Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

5. You have to create at least 15 logical & meaningful charts having important insights.


[ Hints : - Do the Vizualization in  a structured way while following "UBM" Rule.

U - Univariate Analysis,

B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)

M - Multivariate Analysis
 ]





6. You may add more ml algorithms for model creation. Make sure for each and every algorithm, the following format should be answered.


*   Explain the ML Model used and it's performance using Evaluation metric Score Chart.


*   Cross- Validation & Hyperparameter Tuning

*   Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart.

*   Explain each evaluation metric's indication towards business and the business impact pf the ML model used.

# ***Let's Begin !***

## ***1. Know Your Data***

### Import Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
# Import Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

#To ignore warnings
import warnings
warnings.filterwarnings('ignore')

"""### Dataset Loading"""

# Load Dataset
from google.colab import drive
drive.mount('/content/drive')

# Loabding Dataset
path='/content/drive/MyDrive/Data_Sets/Hotel_Bookings.csv'
df=pd.read_csv(path)

"""### Dataset First View"""

# Dataset First Look
df.head()

df.tail()

df.shape

"""### Dataset Rows & Columns count"""

# Dataset Rows & Columns count
df.columns

"""### Dataset Information"""

# Dataset Info
df.info()

"""#### Duplicate Values"""

# Dataset Duplicate Value Count
df.duplicated().sum()

#Remove duplicate values
df.drop_duplicates(inplace=True)

df.duplicated().sum()

# Checking for new shape of dataset
df.shape

"""#### Missing Values/Null Values"""

# Missing Values/Null Values Count
null_df=pd.DataFrame(df.isna().sum()).rename(columns={0:'number_of_nulls_values'})
null_df

# Visualizing the missing values
plt.figure(figsize=(7,7))
null_df.plot(kind='bar')
plt.title('Graph of Number of null values with respect to its Variable')

# Percentage of null values
percentage_null_df=pd.DataFrame(round(df.isna().sum()*100/len(df),4)).rename(columns={0:'percentage_null_values'})
percentage_null_df

# Dropping variable having more than 50% null values
df.drop(columns='company', inplace=True)

# Replacing null values with the most frequent value in a variable
df['children']=df['children'].fillna(df['children'].mode()[0])
df['country']=df['country'].fillna(df['country'].mode()[0])
df['agent']=df['agent'].fillna(df['agent'].mode()[0])

# Check for null values are removed
df.isna().sum()

df.shape

"""### What did you know about your dataset?

Answer Here

- Children, country, agent, and company variables have null values of 0.0046%, 0.5172%, 13.9514%, and 93.9826%, respectively. Variable companies having more than 50% null values

- From above, children, country, and agent are discrete numerical variables, so replaced null values with modes, and the variable company had null values greater than 50%, so removed it.

- All the null values have been successfully removed.

## ***2. Understanding Your Variables***
"""

# Dataset Columns
# Obtaining categorical veriables
categorical_veriables=[i for i in df.columns if df[i].dtypes=='O']
print(f'Dataset having {len(categorical_veriables)} categorical variables')
print('--'*39)
print(categorical_veriables)

# Obtaining Numerical varibles
numerical_variables=[i for i in df.columns if df[i].dtypes!='O']
print(f'There are {len(numerical_variables)} numerical variables.')
print('--'*39)
print(numerical_variables)

# Obtaining Descrete varibles from Numerical varibles
# Variables having less than 150 categories are consider as descrete variable
descrete_variavles=[]
for i in numerical_variables:
  if len(df[i].value_counts())<=150:
    descrete_variavles.append(i)
    print(i,':',df[i].unique())
    print('__'*39)
  else:
      pass

print(f'Dataset having {len(descrete_variavles)} descrete variables')

# Obtaining contineous variables from numerical variables
contineous_variables=[i for i in numerical_variables if i not in descrete_variavles]
print(f'Dataset having {len(contineous_variables)} contineous variables')
print('--'*39)
print(contineous_variables)

# Checking for outliers for contineous variables

from scipy.stats import norm
for i in contineous_variables:
  plt.figure(figsize=(15,6))
  plt.subplot(1,2,1)
  ax=sns.boxplot(data=df[i])
  ax.set_title(f'{i}')
  ax.set_ylabel(i)

  plt.subplot(1,2,2)
  ax=sns.distplot(df[i], fit=norm)
  ax.set_title(f'skewness of {i} : {df[i].skew()}')
  ax.set_xlabel(i)
  print('__'*39)
  plt.show()

# Using Inter Quartile range in skew symmetric curve for removing outliers

# Outlier columns
outliers_columns=['lead_time','adr']

# Copy dataset as new dataset
new_df=df.copy()

# Capping dataset
for i in outliers_columns:
    #Findng IQR
    Q1=new_df[i].quantile(0.25)
    Q3=new_df[i].quantile(0.75)
    IQR=Q3-Q1

    # Defining lower and upper limit
    lower_limit =new_df[i].quantile(0.25)-1.5*IQR
    upper_limit =new_df[i].quantile(0.75)+1.5*IQR

    # Applying lower and upper limit to each variables
    new_df.loc[(new_df[i] > upper_limit),i] = upper_limit
    new_df.loc[(new_df[i] < lower_limit),i] = lower_limit

# Checking for outliers for contineous variables
from scipy.stats import norm
for i in outliers_columns:
  plt.figure(figsize=(15,6))
  plt.subplot(1,2,1)
  ax=sns.boxplot(data=new_df[i])
  ax.set_title(f'{i}')
  ax.set_ylabel(i)

  plt.subplot(1,2,2)
  ax=sns.distplot(new_df[i], fit=norm)
  ax.set_title(f'skewness of {i} : {new_df[i].skew()}')
  ax.set_xlabel(i)
  print('__'*50)
  plt.show()

# Dataset Describe
new_df.describe()

"""### Variables Description

- hotel:- Name of hotel ( City or Resort)
- is_canceled:- Whether the booking is canceled or not (0 for no canceled and 1 for canceled)
- lead_time:- time (in days) between booking transaction and actual arrival.
- arrival_date_year:- Year of arrival
- arrival_date_month:- month of arrival
- arrival_date_week_number:- week number of arrival date.
- arrival_date_day_of_month:- Day of month of arrival date
- stays_in_weekend_nights:- No. of weekend nights spent in a hotel
- stays_in_week_nights:- No. of weeknights spent in a hotel
- adults:- No. of adults in single booking record.
- children:- No. of children in single booking record.
- babies:- No. of babies in single booking record.
- meal:- Type of meal chosen
- country:- Country of origin of customers (as mentioned by them)
- market_segment:- What segment via booking was made and for what purpose.
- distribution_channel:- Via which medium booking was made.
- is_repeated_guest:- Whether the customer has made any booking before(0 for No and 1 for Yes)
- previous_cancellations:- No. of previous canceled bookings.
- previous_bookings_not_canceled:- No. of previous non-canceled bookings.
- reserved_room_type:- Room type reserved by a customer.
- assigned_room_type:- Room type assigned to the customer.
- booking_changes:- No. of booking changes done by customers
- deposit_type:- Type of deposit at the time of making a booking (No deposit/ Refundable/ No refund)
- agent:- Id of agent for booking
- company:- Id of the company making a booking
- days_in_waiting_list:- No. of days on waiting list.
- customer_type:- Type of customer(Transient, Group, etc.)
- adr:- Average Daily Rate.
- required_car_parking_spaces:- No. of car parking asked in booking
- total_of_special_requests:- total no. of special request.
- reservation_status:- Whether a customer has checked out or canceled,or not showed
- reservation_status_date:- Date of making reservation status.

### Check Unique Values for each variable.
"""

# Check Unique Values for each variable.

"""## 3. ***Data Wrangling***

### Data Wrangling Code
"""

# Dataset
new_df

#checking unique values in each variable
for i in new_df.columns:
    print(f'{i}:{new_df[i].unique()}')
    print('__'*50)

# Change datatype of variables children and agent to correct format from float64 to int64
new_df[['children','agent']]=new_df[['children','agent']].astype('int64')

# Change datatype of variable reservation_status_date to correct format from object to datetime64
new_df['reservation_status_date']=pd.to_datetime(new_df['reservation_status_date'], format='%Y-%m-%d')

# Checking datatype
new_df[['children','agent','reservation_status_date']].info()

# Adding night stays on week night and weekend night in one variable to 'total_stays'
new_df['total_stays']=new_df['stays_in_weekend_nights']+ new_df['stays_in_week_nights']

# Converting "adults," "children," and "babies" to total_people by adding it
new_df['total_people']= new_df['adults']+ df['children']+ new_df['babies']

# Creating 'total_childrens' variable by adding 'chldrens' and 'babies' variables
new_df['total_childrens']= df['children']+ new_df['babies']

# Creating 'reserved_room_assigned' variable which describe same room assigned or not
new_df['reserved_room_assigned']=np.where(new_df['reserved_room_type']==new_df['assigned_room_type'], 'yes', 'no')

# Creating 'guest_category' from variable 'total_people'
new_df['guest_category']=np.where(new_df['total_people']==1, 'single',
                                 np.where(new_df['total_people']==2, 'couple', 'family'))

# Creating 'lead_time_category' from 'lead_time' variale to display category
new_df['lead_time_category']=np.where(new_df['lead_time']<=15, 'low',
                                 np.where((new_df['lead_time']>15) & (new_df['lead_time']<90), 'medium', 'high'))

# Write your code to make your dataset analysis ready.
new_df.head()

new_df.shape

# Checking info of new dataset
new_df.info()

# Coverting datatype of variables total_people and total_childrens to int64 from float64
new_df['total_people']=new_df['total_people'].astype('int64')
new_df['total_childrens']=new_df['total_childrens'].astype('int64')


#Checking datatype of total_column
new_df[['total_people','total_childrens']].info()

"""### What all manipulations have you done and insights you found?

- The variables "children," "agent," "reservation_status_date," "total_people," and "total_children" do not have the correct datatype format. So they are transformed from float64 datatypes to int64. The variable "reservation_status_date" was transformed from object datatype to datetime64.

- For more convenience in the dataset, "total_stays" and "total_people" variables are created. By adding the variables "stays_in_weekend_nights" and "stays_in_weeknights," the variable "total_stays" is created. The variables "adults," "children," and "babies" are combined, the variable "total_people" is created.

- The variable "reserved_room_assigned" is made up of the variables "reserved_room_type" and "assigned_room_type," which describe whether or not a reserved room for a customer has been assigned. From variables "children" and "babies," a new "total_children" variable is created by adding both of them.

- The variable "total_people" was used to create "guest_category," which describes bookings made for individuals, couples, or families. The variable 'lead_time_category' was created from the variable 'lead_time' to display lead time as low, medium, and high.

- Variable "total_people" cannot be 0, so observations in total_people having 0 values are dropped.

## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***
"""

# Obtaing target variable
excluded_variables=[var for var in new_df.columns if len(new_df[var].value_counts()) > 15]
target_variables=[var for var in new_df.columns if var not in excluded_variables]

# Defining r to autofit the number and size of plots
r = int(len(target_variables)/3 +1)

# Defining a function to Notate the percent count of each value on the bars
def annot_percent(axes):
    '''Takes axes as input and labels the percent count of each bar in a countplot'''
    for p in plot.patches:
        total = sum(p.get_height() for p in plot.patches)/100
        percent = round((p.get_height()/total),2)
        x = p.get_x() + p.get_width()/2
        y = p.get_height()
        plot.annotate(f'{percent}%', (x, y), ha='center', va='bottom')

# Plotting the countplots for each variable in target_variables
plt.figure(figsize=(18,r*3))
for n,var in enumerate(target_variables):
    plot = plt.subplot(r,3,n+1)
    sns.countplot(x=new_df[var]).margins(y=0.15)
    plt.title(f'{var.title()}',weight='bold')
    plt.tight_layout()
    annot_percent(plot)

"""#### **Observation**

- A city hotel was most preferred by 61.07 percent of customers over a resort.

- 72.48% of bookings are not cancelled. Almost one-third of all reservations are canceled.

- Bookings increased by 33.28% in 2016 compared to 2015, but fell by 12.25% in 2017.

- Customers make the most reservations in August, followed by July. Customers made the fewest reservations in November, December, and January. So we can make offers to customers in November, December, and January to maximise booking.

- BB is the most requested food.
- Most of the bookings are made through the online platform.
- The top distribution channel is TA/TO, which is used to make most of the bookings.
- The majority of hotel bookings are made by new customers. Very few customers (3.86%) visited again.
- The customer's top preference is for Room A to be reserved.
- Customers do not want to pay a pre-deposit for a reservation.
- Most customers (80%) preferred to book a hotel for a short stay.
- 90% of people do not require parking spaces for their vehicles.
- 70% chance that bookings will not be cancelled by customers.
- Reserved rooms were not assigned to 15% of customers. Ensure that customers receive the rooms they have reserved.
- Reservations were often made for two people. 10% or so of guests brought their families. Few bring their families with them. Offer family-friendly discounts to encourage reservations for family and business events.

#### Chart - 1
"""

# Chart - 1 visualization code
plt.figure(figsize=(5,5))
plot=plt.subplot(111)
ax=sns.countplot(x=new_df['is_canceled'], hue=new_df['reserved_room_assigned'])
ax.set_title('is_canceled v/s reserved_room_assigned')
annot_percent(plot)
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting count plot for is_canceled in terms of reserved_room_assigned

##### 2. What is/are the insight(s) found from the chart?

The inability to assign a reserved room to a customer is not grounds for cancellation. Less than 1% of people who cancelled their booking when the reserved room was not assigned.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 2
"""

# Chart - 2 visualization code
plt.figure(figsize=(5,5))
plot=plt.subplot(111)
ax=sns.countplot(x=new_df['lead_time_category'], hue=new_df['is_canceled'])
ax.set_title('lead_time_category v/s is_canceled')
annot_percent(plot)
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting count plot for lead_time_category in terms of is_canceled

##### 2. What is/are the insight(s) found from the chart?

Less lead time means fewer cancellations. Customers who book hotels more than 15 days in advance are more likely to cancel their booking. Booking cancellations are not caused by a longer Lead time.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 3
"""

# Chart - 3 visualization code
plt.figure(figsize=(5,5))
plot=plt.subplot(111)
ax=sns.countplot(x=new_df['hotel'], hue=new_df['guest_category'])
ax.set_title('hotel v/s guest_category')
annot_percent(plot)
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting count plot for hotel

##### 2. What is/are the insight(s) found from the chart?

Most customers book hotels for two people (couples). Customers prefer city hotels over resorts for family bookings. A city hotel is preferred when booking for a single person.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 4
"""

# Chart - 4 visualization code
plt.figure(figsize=(5,5))
sns.violinplot(x=new_df['hotel'], y=new_df['lead_time'])
ax.set_title('is_canceled v/s lead_time')
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting violin plot for hotel against lead_time

##### 2. What is/are the insight(s) found from the chart?

In comparison to city hotels, guests book resort hotels a little bit in advance.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 5
"""

# Chart - 5 visualization code
plt.figure(figsize=(5,5))
plot=plt.subplot(111)
ax=sns.countplot(x=new_df['distribution_channel'], hue=new_df['is_canceled'])
ax.set_title('% of booking cancellations per distribution channel')
annot_percent(plot)
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting a count plot for distribution channels in terms of the number of booking cancellations

##### 2. What is/are the insight(s) found from the chart?

The majority of canceled bookings were made through the TA/TO distribution channel. Bookings made through the Direct, Corporate, and GDS distribution channels are extremely unlikely to be canceled.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 6
"""

# Chart - 6 visualization code
plt.figure(figsize=(10,5))
ax=sns.countplot(x=new_df['market_segment'], hue=new_df['is_canceled'])
ax.set_title('booking cancellations per market_segment')
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting count plot for market segment

##### 2. What is/are the insight(s) found from the chart?

The majority of hotel reservations are made online, as are the majority of cancellations of reservations made by customers who made their reservations online.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 7
"""

# Chart - 7 visualization code
plt.figure(figsize=(15,8))
ax=sns.boxplot(x=new_df['assigned_room_type'], y=new_df['adr'])
ax.set_title('Box plot of assigned_room_type v/s adr')
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting box plot assigned_room_type against ADR

##### 2. What is/are the insight(s) found from the chart?

Room types G, followed by H, generate high ADR. Room I has a very low ADR. The most popular room is A, but it has a lower ADR than other room types that are less popular with customers for bookings. To maximize revenue, the hotel should increase the number of rooms in A, G and H.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 8
"""

# Chart - 8 visualization code
plt.figure(figsize=(5,5))
plot=plt.subplot(111)
ax=sns.barplot(x=new_df['hotel'], y=new_df['days_in_waiting_list'])
ax.set_title('hotel v/s days_in_waiting_list')
annot_percent(plot)
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting bar plot for hotel against number of waiting days for bookings

##### 2. What is/are the insight(s) found from the chart?

A city hotel is busier than a resort.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 9
"""

# Chart - 9 visualization code
plt.figure(figsize=(10,7))
plot=plt.subplot(111)
ax=sns.barplot(x=new_df['arrival_date_month'], y=new_df['days_in_waiting_list'], hue=new_df['hotel'])
ax.set_title('bar plot of arrival_date_month vs. days_in_waiting_list in terms of hotel types')
annot_percent(plot)
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

Bar plot for arrival month of customer against waiting days for bookings

##### 2. What is/are the insight(s) found from the chart?

Customers prefer city hotels over resort hotels for the New Year. The city hotel is busiest in October and September , which means that this month has the most bookings. In the fourth quarter of the year, in December, resorts are busier than city hotels. Resort hotels are significantly less busy in the third quarter of the year than they are throughout the year. In July there is no longer waiting period for bookings.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 10
"""

# Chart - 10 visualization code
plt.figure(figsize=(5,5))
plot=plt.subplot(1,1,1)
ax=sns.barplot(x=new_df['customer_type'], y=new_df['adr'], hue=new_df['hotel'])
ax.set_title('bar plot of customer_type vs. adr in terms of hotel types')
annot_percent(plot)
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting bar plot for diffrent customers type against ADR

##### 2. What is/are the insight(s) found from the chart?

City hotels generate more revenue (54.86%) than resort hotels (45.14%). Transient customers who book rooms for a short period of time generate more revenue than other types of customers.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 11
"""

# Chart - 11 visualization code
plt.figure(figsize=(7,5))
ax=sns.countplot(x=new_df['required_car_parking_spaces'], hue=new_df['hotel'])
ax.set_title('number of parking spaces requested by customers in terms of hotel types')
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting count plot for number of requested parking spaces in terms of hotel

##### 2. What is/are the insight(s) found from the chart?

Most of the customers (91.63%) did not request any parking spaces. Only a few customers (8.31%) requested parking. One parking space is most desirable to customers. The hotel can eliminate parking spaces 3 and 8 and concentrate on parking spaces 1 and 2, which will reduce the cost of providing parking spaces.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 12
"""

# Chart - 12 visualization code
plt.figure(figsize=(15,8))
plot=plt.subplot(111)
ax=sns.countplot(x=new_df['total_stays'])
ax.set_title('number of nights preferred to stay by % of customers')
annot_percent(plot)
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting count plot for total_stays

##### 2. What is/are the insight(s) found from the chart?

The majority of the guests are staying at the hotel for three nights. Customers who book hotels for more than one week are very rare. Most hotel bookings are for less than 7 nights. The hotel should pay more attention to keeping reservations available for less than 7 nights to not lose customers and to generate more revenue.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 13
"""

# Chart - 13 visualization code
plt.figure(figsize=(10,5))
plot=plt.subplot(111)
ax=sns.countplot(x=new_df['total_of_special_requests'], hue=new_df['guest_category'])
ax.set_title('total_of_special_requests by % of customers')
annot_percent(plot)
plt.tight_layout()
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting count plot for total_of_special_requests in terms of different guest type

##### 2. What is/are the insight(s) found from the chart?

Approximately half of all customers do not make special requests. Customers frequently make one special request. Couples make the majority of special requests. Bookings made for single people are not more requested for special requests than those made for couples, followed by family and business events.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer Here

#### Chart - 14 - Correlation Heatmap
"""

# Chart - 14 Corelation visualization code
plt.figure(figsize=(15,8))
# Select only numerical columns before calculating correlations
numerical_df = new_df.select_dtypes(include=['number'])
sns.heatmap(numerical_df.corr(), vmin=-1, cmap='coolwarm', annot=True)
plt.show()

"""##### 1. Why did you pick the specific chart?

Plotting a correlation heatmap for the dataset

##### 2. What is/are the insight(s) found from the chart?

- In the heatmap, we see some high correlation between a few variables because we created new variables total_stays, total_people, and total_children from existing variables and did not drop old variables.
- The variables lead_time and is_canceled have weak relationships. The most likely reason for cancellation is a longer lead time.

#### Chart - 15 - Pair Plot
"""

# Chart - 15 Pair Plot visualization code
# Creating new dataset
new_df2=new_df[['hotel','is_canceled','lead_time','arrival_date_year','arrival_date_month','meal','market_segment','distribution_channel','reserved_room_type',
       'assigned_room_type','deposit_type','days_in_waiting_list', 'customer_type', 'adr','total_stays',
       'total_people', 'total_childrens', 'reserved_room_assigned',
       'guest_category', 'lead_time_category']]

# Plotting pair plot for dataset
plt.figure(figsize=(10,8))
ax=sns.pairplot(new_df2)
plt.show()

"""##### 1. Why did you pick the specific chart?

A pair plot, is a matrix of graphs that enables the visualization of the relationship between each pair of variables in a dataset. It combines both histogram and scatter plots, providing a unique overview of the dataset's distributions and correlations.

##### 2. What is/are the insight(s) found from the chart?

- We can conclude from the relationship between lead_time and is_canceled that a longer lead time does not result in cancellations.
- We can conclude from the lead_time and arrival_date_year graphs that people were consistently interested in booking rooms in advance in 2015, 2016, and 2017.
- According to the graph of arrival_date_year and days_in_waiting_list, 2016 had the longest waiting period for room bookings.
- We can conclude from the graph of ADR and days_in_waiting_list that a short minimum waiting period for bookings results in a high ADR.
- From the graph of "is_canceled" and "days_in_waiting_list," we conclude that waiting for bookings is not a reason for booking cancellation.

## ***5. Hypothesis Testing***

### Based on your chart experiments, define three hypothetical statements from the dataset. In the next three questions, perform hypothesis testing to obtain final conclusion about the statements through your code and statistical testing.

Answer Here.

### Hypothetical Statement - 1

#### 1. State Your research hypothesis as a null hypothesis and alternate hypothesis.

The majority of bookings were made for how many people, and the majority of cancellations of bookings were made for how many people?

#### 2. Perform an appropriate statistical test.
"""

# Perform Statistical Test to obtain P-Value
# targeted variable
variables=['hotel','is_canceled']

n=0
for var in variables:
    plt.figure(figsize=(5,5))
    plot=plt.subplot(1,1,n+1)
    ax=sns.countplot(x=new_df['guest_category'], hue=new_df[var])
    ax.set_title(f'guest_category v/s {var} in terms of % of customers')
    annot_percent(plot)
    plt.tight_layout()
    plt.show()

"""##### Which statistical test have you done to obtain P-Value?

Ploting graph using for each above variabe

##### Why did you choose the specific statistical test?

The majority of hotel reservations are made for couples. Couples' reservations are more likely to be canceled than singles' or families' reservations. Bookings for single people are rarely canceled.

### Hypothetical Statement - 2

#### 1. State Your research hypothesis as a null hypothesis and alternate hypothesis.

Does a longer waiting period cause the cancellation of bookings?

#### 2. Perform an appropriate statistical test.
"""

#Selecting bookings with non zero waiting time
waiting_time=new_df[new_df['days_in_waiting_list']!=0]

#ploting graph

plt.figure(figsize=(5,5))
ax=sns.kdeplot(x=waiting_time['days_in_waiting_list'], hue=waiting_time['is_canceled'])
ax.set_title('days_in_waiting_list')
plt.tight_layout()
plt.show()

"""##### Which statistical test have you done to obtain P-Value?

Creating country_df which counts number of bookings by each country

The majority of canceled bookings have a waiting period of less than 150 days, but those that are not canceled bookings by customers have a waiting period of less than 150 days, which has a higher density than the canceled bookings. So a longer waiting period is not a reason for booking cancellation.

Answer Here.

### Hypothetical Statement - 3

#### 1. State Your research hypothesis as a null hypothesis and alternate hypothesis.

Answer Here.

#### 2. Perform an appropriate statistical test.
"""

# Perform Statistical Test to obtain P-Value

"""##### Which statistical test have you done to obtain P-Value?

Answer Here.

##### Why did you choose the specific statistical test?

Answer Here.

## ***6. Feature Engineering & Data Pre-processing***

### 1. Handling Missing Values
"""

# Handling Missing Values & Missing Value Imputation

"""#### What all missing value imputation techniques have you used and why did you use those techniques?

Answer Here.

### 2. Handling Outliers
"""

# Handling Outliers & Outlier treatments

"""##### What all outlier treatment techniques have you used and why did you use those techniques?

Answer Here.

### 3. Categorical Encoding
"""

# Encode your categorical columns

"""#### What all categorical encoding techniques have you used & why did you use those techniques?

Answer Here.

### 4. Textual Data Preprocessing
(It's mandatory for textual dataset i.e., NLP, Sentiment Analysis, Text Clustering etc.)

#### 1. Expand Contraction
"""

# Expand Contraction

"""#### 2. Lower Casing"""

# Lower Casing

"""#### 3. Removing Punctuations"""

# Remove Punctuations

"""#### 4. Removing URLs & Removing words and digits contain digits."""

# Remove URLs & Remove words and digits contain digits

"""#### 5. Removing Stopwords & Removing White spaces"""

# Remove Stopwords

# Remove White spaces

"""#### 6. Rephrase Text"""

# Rephrase Text

"""#### 7. Tokenization"""

# Tokenization

"""#### 8. Text Normalization"""

# Normalizing Text (i.e., Stemming, Lemmatization etc.)

"""##### Which text normalization technique have you used and why?

Answer Here.

#### 9. Part of speech tagging
"""

# POS Taging

"""#### 10. Text Vectorization"""

# Vectorizing Text

"""##### Which text vectorization technique have you used and why?

Answer Here.

### 4. Feature Manipulation & Selection

#### 1. Feature Manipulation
"""

# Manipulate Features to minimize feature correlation and create new features

"""#### 2. Feature Selection"""

# Select your features wisely to avoid overfitting

"""##### What all feature selection methods have you used  and why?

Answer Here.

##### Which all features you found important and why?

Answer Here.

### 5. Data Transformation

#### Do you think that your data needs to be transformed? If yes, which transformation have you used. Explain Why?
"""

# Transform Your data

"""### 6. Data Scaling"""

# Scaling your data

"""##### Which method have you used to scale you data and why?

### 7. Dimesionality Reduction

##### Do you think that dimensionality reduction is needed? Explain Why?

Answer Here.
"""

# DImensionality Reduction (If needed)

"""##### Which dimensionality reduction technique have you used and why? (If dimensionality reduction done on dataset.)

Answer Here.

### 8. Data Splitting
"""

# Split your data to train and test. Choose Splitting ratio wisely.

"""##### What data splitting ratio have you used and why?

Answer Here.

### 9. Handling Imbalanced Dataset

##### Do you think the dataset is imbalanced? Explain Why.

Answer Here.
"""

# Handling Imbalanced Dataset (If needed)

"""##### What technique did you use to handle the imbalance dataset and why? (If needed to be balanced)

Answer Here.

## ***7. ML Model Implementation***

### ML Model - 1
"""

# ML Model - 1 Implementation

# Fit the Algorithm

# Predict on the model

"""#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."""

# Visualizing evaluation Metric Score chart

"""#### 2. Cross- Validation & Hyperparameter Tuning"""

# ML Model - 1 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)

# Fit the Algorithm

# Predict on the model

"""##### Which hyperparameter optimization technique have you used and why?

Answer Here.

##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart.

Answer Here.

### ML Model - 2

#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart.
"""

# Visualizing evaluation Metric Score chart

"""#### 2. Cross- Validation & Hyperparameter Tuning"""

# ML Model - 1 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)

# Fit the Algorithm

# Predict on the model

"""##### Which hyperparameter optimization technique have you used and why?

Answer Here.

##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart.

Answer Here.

#### 3. Explain each evaluation metric's indication towards business and the business impact pf the ML model used.

Answer Here.

### ML Model - 3
"""

# ML Model - 3 Implementation

# Fit the Algorithm

# Predict on the model

"""#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."""

# Visualizing evaluation Metric Score chart

"""#### 2. Cross- Validation & Hyperparameter Tuning"""

# ML Model - 3 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)

# Fit the Algorithm

# Predict on the model

"""##### Which hyperparameter optimization technique have you used and why?

Answer Here.

##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart.

Answer Here.

### 1. Which Evaluation metrics did you consider for a positive business impact and why?

Answer Here.

### 2. Which ML model did you choose from the above created models as your final prediction model and why?

Answer Here.

### 3. Explain the model which you have used and the feature importance using any model explainability tool?

Answer Here.

## ***8.*** ***Future Work (Optional)***

### 1. Save the best performing ml model in a pickle file or joblib file format for deployment process.
"""

# Save the File

"""### 2. Again Load the saved model file and try to predict unseen data for a sanity check.

"""

# Load the File and predict unseen data.

"""### ***Congrats! Your model is successfully created and ready for deployment on a live server for a real user interaction !!!***

# **Conclusion**

- The top country with the most number of bookings is PRT, and the number one
agent with the most number of bookings is 9.
- Customers favored city hotels more than resort hotels by a margin of 61.07 percent.
- One of the four reservations is canceled.
- The most popular food is BB.
- The Online (internet) platform is used to make the majority of bookings.
The majority of the bookings are made using TA/TO, the leading distribution channel.
- The vast majority of hotel bookings are made by new guests. Almost no consumers (3.86%) returned.
- The customer wants Room A to be reserved the most.
- Customers do not wish to make a bookings with a pre-deposit.
- Customers (80%) favored making a hotel reservation for a short visit.
- Only 10% of people require space to park their cars.
- Most visitors are couples.
- The inability to assign a reserved room to a customer is not grounds for cancellation.
- Booking cancellations are not caused by a longer Lead time.
- A city hotel is busier than a resort.
- The busiest months for hotels are October and September. There isn't a lengthy wait for reservations in July.
- Not assigning a reserved room does not affect ADR.

### ***Hurrah! You have successfully completed your Machine Learning Capstone Project !!!***
"""